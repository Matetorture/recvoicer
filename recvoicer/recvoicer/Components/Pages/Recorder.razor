@page "/";

@inject AudioService AudioService;
@inject IJSRuntime JSRuntime;

<link href="~/css/recorder.css" rel="stylesheet" />

<div class="flex-column mt3">
    <div class="f5 mb2">
        Record an audio
    </div>
    <div class="f5 mb2">
        @if (!AudioService.IsRecording)
        {
            <button @onclick="StartRecording"> Start</button>
        }
        else
        {
            <button @onclick="StopRecording"> Stop</button>
        }
    </div>
    @if(ShowDialog){
        <div id="dialogBox">
            <span>Enter the name of recording</span>
            <input @bind="RecordingName" placeholder="name" type="text" name="name"/>
            <button @onclick="ConfirmRecording">SAVE</button>
        </div>
    }
</div>

@code {
    private Stream recordedAudioStream;
    private string AudioSource { get; set; }
    private string RecordingName { get; set; } = "";
    private bool ShowDialog { get; set; } = false;

    public async void StartRecording()
    {
        if (await Permissions.RequestAsync<Permissions.Microphone>() != PermissionStatus.Granted)
        {
            // Inform user to request permission
        }
        else
        {
            await AudioService.StartRecordingAsync();
        }

    }
    public async void StopRecording()
    {
        recordedAudioStream = await AudioService.StopRecordingAsync();

        ShowDialog = true;
    }

    public async void ConfirmRecording()
    {
        ShowDialog = false;

        var audioBytes = new byte[recordedAudioStream.Length];
        await recordedAudioStream.ReadAsync(audioBytes, 0, (int)recordedAudioStream.Length);
        var base64String = Convert.ToBase64String(audioBytes);


        SaveRecording($"data:audio/mpeg;base64,{base64String}");
    }

    private void SaveRecording(string audio)
    {
        string directoryPath = Environment.GetFolderPath(Environment.SpecialFolder.Personal);
        directoryPath = Path.Combine(directoryPath, @"\recvoicer");
        Directory.CreateDirectory(directoryPath);

        string filePath = Path.Combine(directoryPath, $"{DateTime.Now.ToString()} - {RecordingName}.txt");

        File.WriteAllText(filePath, audio);

        RecordingName = "";
    }
}